<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Markdown语法基础与进阶]]></title>
    <url>%2F2018%2F02%2F07%2FMarkdown%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80%E4%B8%8E%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[Hexo写文章确实很好上手，但在新手(嗯，就是我)写文章的时候总会遇到一些特殊格式，或者引用资源之类的，让我拿着Notepad不知所措，比如一开始我po的几篇作业的题目中涉及一些带指数的公式之类的，我只能瑟瑟发抖拿^处理，那个时候遇见图片我就直接注释“图片参见课件”…… 昨天学了怎么插图片，但调整图片相关的属性还没写，打算一会更新到那篇教程的进阶里…… 基础篇在一开始看完官方写作文档Hexo Writing里最基础的内容+hello world之后，我就着急上手了，所以在前几篇文章里，我只实际应用了以下几个格式： 1.大标题： ## heading2.小标题： ### heading3.普通文本：plain text4.超链接： [text](url)5.代码块： &#96;&#96;&#96;//some code here&#96;&#96;&#96; 然而这在实际应用中肯定是不够的啊！所以今天来学习一下Markdown语法，相信写完这篇教程我就可以变身小达人了~进阶篇Hexo的文章是靠.md文件写入的，也就是Markdown，Markdown是一种标记语言（这是废话，你从名字就能看出来）说到这很多人会想起HTML(HyperText Mark-up Language),这大概是大家最先接触的一门标签/标记语言，简单说就是靠一堆标签来布置网页上的内容，之后我们又学了CSS(Cascading Style Sheets),也就是样式表，这货的出现是在HTML之后，为了补充更强大更复杂的样式功能，也为了把网页中的内容和样式分开来，可以看出来他们俩在一起越来越复杂化了；所以又出现了Markdown（我猜这个名字就是为了和HTML的Markup做区分来的），这是一个清爽简单版，所见即所得的标记语言，没有复杂的标签和属性，只需要在文本上加几个符号之类的，而各位用Hexo的很重要的一个原因就是简洁、方便、流畅，那么为啥Hexo要用Markdown也就可想而知啦（当然啦Markdown也是兼容HTML的，所以你在文章里用标签也没问题）。在想想Servlet和JSP的关系，哎呀这不就是HTML和Markdown的关系吗！为了化繁为简，专门给我这种懒蛋+小白设计的。不信你看，你写好的文章部署完了之后，打开页面，右键查看源代码，不还是HTML吗？！哈哈哈 “Markdown 从来都不是用来替代 HTML的，更不是用于前端开发、写完整页面的。Markdown的设计目的是方便写作的时候，标记格式、同时使标记格式后的纯文本，比起 HTML 源码，更有可读性。Markdown 的呈现需要解析成HTML, 而其支持的 HTML 标记也只是一部分。从这个角度看， Markdown 可算是 HTML 的一个简化了标记形式的子集。” 标题 Markdown支持共六级标题，语法如下：123# 第一级标题## 第二级标题###### 第六级标题 强调12345*这些文字会生成&lt;em&gt;的效果*_这些文字会生成&lt;u&gt;的效果_**这些文字会生成&lt;strong&gt;效果**__这些文字会生成&lt;strong&gt;的效果__ 效果如下：这些文字会生成&lt;em&gt;的效果这些文字会生成&lt;u&gt;的效果这些文字会生成&lt;strong&gt;效果这些文字会生成&lt;strong&gt;的效果 换行四个及以上的空格加回车。（这个还真不如直接用HTML简单） 无序列表1234567* 项目一 无序列表 * 项目二 * 项目二的子项目一 无序列表 * 项目二的子项目二即：*+空格+项目TAB+*+空格+子项目 效果如下： 项目一 无序列表 项目二 项目二的子项目一 项目二的子项目二 有序列表语法如下：123456781. 项目一 有序列表 2. 项目二 3. 项目三 1. 项目三的子项目一 2. 项目三的子项目二即：数字+.+空格+项目TAB+数字+.+空格+子项目 效果如下： 项目一 有序列表 项目二 项目三 项目三的子项目一 项目三的子项目二 任务列表语法如下（中括号内为字母x）：12- [ ] 任务一 未做任务 - [x] 任务二 已做任务 效果如下： 任务一 未做任务 任务二 已做任务 图片语法如下：1![title text](url) 关于插入图片的详情请查看另一篇文章：如何在.md文件中插入图片 链接语法如下：123456文本链接：[text](url)自动生成链接：&lt;url&gt;例：email &lt;example@example.com&gt;[GitHub](http://github.com)自动生成连接 &lt;http://www.github.com/&gt; 效果如下：email &#101;&#120;&#97;&#x6d;&#112;&#108;&#x65;&#64;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;GitHub自动生成连接 http://www.github.com/ 引用语法如下：12&gt; 第一行引用文字&gt; 第二行引用文字 效果如下： 第一行引用文字第二行引用文字 行内代码语法如下：1`code here` 代码块语法如下： &#96;&#96;&#96;+language //some code here &#96;&#96;&#96; 效果：就是以上所有的语法块~ 1printf("hello world"); 流程图 需要先安装相关插件 1npm install --save hexo-filter-flowchart 语法如下： &#96;&#96;&#96;flow st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op&#96;&#96;&#96; 效果如下： 表格语法如下：1234第一格表头 | 第二格表头--------- | -------------内容单元格 第一列第一格 | 内容单元格第二列第一格内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格 效果如下：第一格表头 | 第二格表头——— | ————-内容单元格 第一列第一格 | 内容单元格第二列第一格内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格 删除线语法如下：1~~需要加删除线的内容~~ 效果如下：需要加删除线的内容 分割线语法如下：123********- - - 效果如下： 简单公式需要先打开主题的配置文件，修改相关项：12mathjax: enable: true 语法如下：1$$E=mc^2$$ 效果如下：$$E=mc^2$$ 脚注需要先安装相关插件1npm install hexo-footnotes --save 打开主题的配置文件，启用插件：12plugins: - hexo-footnotes 语法如下：1basic footnote1 效果如下：basic footnote1 st=>start: Start op=>operation: Your Operation cond=>condition: Yes or No? e=>end st->op->cond cond(yes)->e cond(no)->op{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12} var code = document.getElementById("flowchart-0-code").value; var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value)); var diagram = flowchart.parse(code); diagram.drawSVG("flowchart-0", options);1.basic footnote content ↩]]></content>
      <categories>
        <category>Posting</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在.md文章中插入图片]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A6%82%E4%BD%95%E5%9C%A8-md%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87%2F</url>
    <content type="text"><![CDATA[起因刚进hexo的坑不久，我写post的方式完全就是最基础的：1hexo new post title 然后在_posts文件夹右键拿Notepad++打开.md文件，然后开始写呀写，一开始没注意到什么问题，主要我自己也没学过Markdown，也没仔细看文档（我只看了基础篇），所以就遇到了一个大问题，写文章的时候不会插图片怎么办？？？于是今天就来学习一下到底如何在文章里插图片，并写下这个教程。 经过1.首先你要打开网站的_config.yml，搜索post_asset_folder这一项（你也可以自己找到这项，反正我眼睛不好得靠Notepad的搜索）。修改这一项的参数，把预置的false改成true。1post_asset_folder: true 这一项的作用就是让hexo在你写new post的时候自动建立一个与文章同名的文件夹，用来放置与该文章相关的所有资源。 2.在网站目录下打开Git Bash，执行以下语句，安装相关插件。1npm install https://github.com/CodeFalling/hexo-asset-image --save 然后等待安装，安装完成后，会输出：12345npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules\fsevents):npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)+ hexo-asset-image@0.0.3added 6 packages in 173.081s 最后两行表示插件安装成功，@后边应该是版本号。 3.之后在用hexo新建文章的时候会发现_posts目录下面会多出一个和文章名字一样的文件夹。结构如下：xxxx├── 图片名.jpg├── 图片名2.jpg└── 图片名3.jpgxxxx.md 4.在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照Markdown的格式插入图片即可，其中[]空着不写则没有图片标题。![你想输入的标题](xxxx/图片名.jpg) 5.最后检查一下，hexo g或者hexo generate生成页面后，进入public\2018\2\6\index.html文件中查看相关字段，可以发现，html标签内的语句是&lt;img src=&quot;2018/2/6/xxxx/图片名.jpg&quot;&gt;，而不是&lt;img src=&quot;xxxx/图片名.jpg&gt;。这很重要，关乎你的网页是否可以真正加载你想插入的图片。 结果以上就是我在.md中输入![Cat](如何在-md文章中插入图片/1202495.png)出现的效果啦。 后续查看官方文档，找到了引用文章资源的标签代码，再来用官方的标签插件测试一下： 1234//引用文章的资源。&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 以上是我在.md文件中写入下列代码的效果1&#123;% asset_img 1202495.png This is an example image %&#125; 另外我找到了一个比Notepad++方便很多的Markdown编辑器，叫Cmd Markdown，看起来非常好用，下次写作试一下~ 进阶学会插入图片之后，接下来要解决的一个问题是图片的尺寸，上文中可以看到图片整个填充到了博文中，并不是原始尺寸。（本来只是一个很小的icon）]]></content>
      <categories>
        <category>Posting</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二下 数据结构（五）]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E4%BA%94%EF%BC%89%2F</url>
    <content type="text"><![CDATA[适用于电商专业大二年级下学期，数据结构专业选修课，不是物联网同学大二上的数据结构哦。年代久远，仅供参考。 目标：掌握排序和折半查找算法。内容：查找表是学生记录的集合，记录由如下数据项组成： （学号，姓名，数据结构课程成绩）(1)用冒泡排序方法对查找表按照成绩非递减排序(2)基于折半查找的方法对指定成绩的记录查找，输出查找成功的记录在有序序列中的位序及其完整记录内容或者说明查找失败。 测试实例：(1) 成绩排列为{50 94 65 97 78 81 83 76 88 92 78}，对应的学号和姓名项自行拟值(2) 查找成绩分别为 78和89 的记录 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#define LIST_INIT_SIZE 100#define INCREMENT_SIZE 10struct stu//create the array of structure and initialize the data.&#123; int num; char name[20]; int score;&#125;student[]=&#123;&#123;0001,"Lydia",50&#125;,&#123;0002,"Mary",94&#125;,&#123;0003,"Mark",65&#125;,&#123;0004,"Santanico",97&#125;,&#123;0005,"Jack",78&#125;,&#123;0006,"Rose",81&#125;,&#123;0007,"Kenna",83&#125;,&#123;0015,"Henry",76&#125;,&#123;0015,"Katherine",88&#125;,&#123;0010,"Claude",92&#125;,&#123;0011,"Leith",78&#125;&#125;;typedef struct SSTable&#123; stu *elem; int length; int tablesize;&#125;; SSTable T;int InitTable(SSTable &amp;T)//initialize the sequence table&#123; T.elem=(stu *)malloc(LIST_INIT_SIZE*sizeof(stu)); if(!T.elem)return -2; T.length=0; T.tablesize=LIST_INIT_SIZE; return 1;&#125;void InputTable(SSTable &amp;T)&#123; printf("Before Sorting, data in the table are as followed：\nNO. Name Score of DS：\n"); for(int i=0;i&lt;=10;i++)&#123; T.elem[i+1]=student[i];//assign the data from the array to the table T.length++; printf("%-10d %-10s %-10d\n",T.elem[i+1].num,T.elem[i+1].name,T.elem[i+1].score); &#125;&#125;void BubbleSort(SSTable &amp;T)&#123; int i ,j; stu temp; int sorted=0; for(i = 0; i &lt; T.length &amp;&amp; ( !sorted); i++)&#123;//sorting the data in non-decreasing order sorted = 1; for(j = 1; j &lt; T.length-i; j++) &#123; if(T.elem[j].score&gt;T.elem[j+1].score) &#123; temp=T.elem[j]; T.elem[j]=T.elem[j+1]; T.elem[j+1]=temp; sorted=0; &#125; &#125; &#125; stu *k;//print out the data after sorting printf("-------------------------------------------------------\nAfter Bubble Sorting, data in the table are as followed：\nNO. Name Score of DS：\n"); for(k = T.elem + 1; k &lt;= T.elem+T.length; k++) printf("%-10d %-10s %-10d\n",k-&gt;num,k-&gt;name,k-&gt;score);&#125;int result;int Search_Bin(SSTable T,int key)//binary search funtion&#123; int low = 1,high = T.length;// put initial range values while ( low &lt;= high ) &#123; int mid = ( low + high )/2; if (key == T.elem[mid].score) &#123; //print out the data for corresponding score printf("-------------------------------------------------------\nSearched Successfully! Data are as followed:\n"); printf("NO. Name Score of DS\n"); printf("%-10d %-10s %-10d\n",T.elem[mid].num,T.elem[mid].name,T.elem[mid].score); result = mid; int k; for (k = 1; T.elem[mid - k].score &gt;= T.elem[mid].score; k++)&#123; printf("NO. Name Score of DS\n"); printf("%-10d %-10s %-10d\n",T.elem[mid - k].num,T.elem[mid - k].name,T.elem[mid - k].score); &#125; for (k = 1; T.elem[mid + k].score &lt;= T.elem[mid].score; k++)&#123; printf("NO. Name Score of DS\n"); printf("%-10d %-10s %-10d\n",T.elem[mid + k].num,T.elem[mid + k].name,T.elem[mid + k].score); &#125; return result; &#125; else &#123; if ( key &lt; T.elem[mid].score) high = mid - 1; else low = mid + 1; &#125; &#125; result = -1; if(result==-1)//print out that no such record is in the table printf("\nSearching failed, no such record in the table!\n\n"); return result;&#125;int main()&#123; int i; InitTable(T); InputTable(T); BubbleSort(T); int key[2];//declare the array of keys to be searched for(int i=0;i&lt;=1;i++)&#123; printf("\nPlease input the score of (%d) to be searched:\n",i+1); scanf("%d", &amp;key[i]); Search_Bin(T, key[i]); &#125; system("pause"); &#125; 日常帮写第二份123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define LIST_INIT_SIZE 100#define INCREMENT_SIZE 10struct stu&#123; int num; char name[20]; int score;&#125;; stu student[11]=&#123;&#123;1110,"晨晨",50&#125;,&#123;1111,"倩倩",94&#125;,&#123;1112,"瑶瑶",65&#125;,&#123;1113,"事事",97&#125;,&#123;1114,"依依",78&#125;,&#123;1115,"格格",81&#125;,&#123;1116,"嗒嗒",83&#125;,&#123;1117,"帅帅",76&#125;,&#123;1118,"咯咯",88&#125;,&#123;1119,"噢噢",92&#125;,&#123;1120,"娅娅",78&#125;&#125;;//创建结构体数组typedef struct SSTable&#123; stu *elem; int length; int tablesize;&#125;; SSTable List;int result;int InitTable(SSTable &amp;T)//生成顺序表 &#123; T.elem=(stu *)malloc(LIST_INIT_SIZE*sizeof(stu)); if(!T.elem)return -2; T.length=0; T.tablesize=LIST_INIT_SIZE; return 1;&#125;void InputTable(SSTable &amp;T)&#123; printf("表中数据如下：\n学号 姓名 数据结构成绩：\n"); for(int i=0;i&lt;=10;i++)&#123; T.elem[i+1].num=student[i].num;//把结构体数组中的数据录入到Table中 strcpy(T.elem[i+1].name,student[i].name); T.elem[i+1].score=student[i].score; T.length++; printf("%-10d %-10s %-10d\n",T.elem[i+1].num,T.elem[i+1].name,T.elem[i+1].score);//并打印出table中的数据 &#125;&#125;void OutputTable(SSTable T)&#123; stu *i; printf("表中数据如下：\n学号 姓名 数据结构成绩：\n"); for(i = T.elem + 1; i &lt;= T.elem+T.length; i++) printf("%-10d %-10s %-10d\n",i-&gt;num,i-&gt;name,i-&gt;score);&#125;void BubbleSort(SSTable &amp;T)&#123; int i ,j; stu temp; int sorted=0; for(i = 0; i &lt; T.length &amp;&amp; ( !sorted); i++)&#123; sorted = 1; for(j = 1; j &lt; T.length-i; j++) &#123; if(T.elem[j].score&gt;T.elem[j+1].score) &#123; temp=T.elem[j]; T.elem[j]=T.elem[j+1]; T.elem[j+1]=temp; sorted=0; &#125; &#125; &#125;&#125;int Search_Bin(SSTable T,int key)&#123; int low = 1,high = T.length;// 置区间初值 while ( low &lt;= high ) &#123; int mid = ( low + high )/2; if (key == T.elem[mid].score) &#123; //打印对应成绩的信息 printf("查找成功！信息如下:\n"); printf("学号 姓名 数据结构成绩：\n"); printf("%-10d %-10s %-10d\n",T.elem[mid].num,T.elem[mid].name,T.elem[mid].score); result = mid; int k; for (k = 1; T.elem[mid - k].score &gt;= T.elem[mid].score; k++)&#123; printf("学号 姓名 数据结构成绩：\n"); printf("%-10d %-10s %-10d\n",T.elem[mid - k].num,T.elem[mid - k].name,T.elem[mid - k].score); &#125; for (k = 1; T.elem[mid + k].score &lt;= T.elem[mid].score; k++)&#123; printf("学号 姓名 数据结构成绩：\n"); printf("%-10d %-10s %-10d\n",T.elem[mid + k].num,T.elem[mid + k].name,T.elem[mid + k].score); &#125; return result; &#125; // 找到待查元素的处理方式 else &#123; if ( key &lt; T.elem[mid].score) high = mid - 1; // 继续在前半区间进行查找 else low = mid + 1; // 继续在后半区间进行查找 &#125; &#125; result = -1; return result;//在顺序表中找不到待查元素的处理方式 &#125;int main()&#123; int i; InitTable(List); InputTable(List); BubbleSort(List); printf("\n冒泡排序方法对查找表按照成绩非递减排序后:\n"); OutputTable(List); int k1, k2;//声明待查找的两个数据的key printf("\n请输入待查找数据(1)的成绩:\n"); scanf("%d", &amp;k1); Search_Bin(List, k1); if(result==-1) printf("查找失败！"); printf("\n\n请输入待查找数据(2)的成绩:\n"); scanf("%d", &amp;k2); Search_Bin(List, k2); if(result==-1) printf("查找失败！"); system("pause"); &#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>大二</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二下 数据结构（四）]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E5%9B%9B%EF%BC%89%2F</url>
    <content type="text"><![CDATA[适用于电商专业大二年级下学期，数据结构专业选修课，不是物联网同学大二上的数据结构哦。年代久远，仅供参考。 目标：二叉树及其应用。内容：(1) 用先序递归过程建立二叉树 (存储结构：二叉链表)输入数据按先序遍历所得序列输入，当某结点左子树或右子树为空时，输入‘’号，如输入abcde*得到的二叉树为：（图片如课件）(2) 计算二叉树中叶子结点的数目。 代码这篇因为我日常得写两份，所以自己的那份干脆用c++，给别人的那份是c，所以建议直接看第二份。1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192#include&lt;iostream&gt; using namespace std; typedef struct node//建立二叉链表的储存结构 &#123; struct node *leftChild; struct node *rightChild; char data; &#125;BiTreeNode, *BiTree; void createBiTree(BiTree &amp;T) &#123; char c; cin &gt;&gt; c; //扫描得到字符 if('*' == c) //如果字符为*，则根节点为空 T = NULL; else &#123; T = new BiTreeNode; //否则建立根节点 T-&gt;data = c; createBiTree(T-&gt;leftChild); createBiTree(T-&gt;rightChild); &#125; &#125; //先序遍历 void preOrderTraverse(BiTree T) &#123; if(T) &#123; cout &lt;&lt; T-&gt;data &lt;&lt; " "; preOrderTraverse(T-&gt;leftChild); preOrderTraverse(T-&gt;rightChild); &#125; &#125; // 中序遍历 void inOrderTraverse(BiTree T) &#123; if(T) &#123; inOrderTraverse(T-&gt;leftChild); cout &lt;&lt; T-&gt;data &lt;&lt; " "; inOrderTraverse(T-&gt;rightChild); &#125; &#125; // 后序遍历 void postOrderTraverse(BiTree T) &#123; if(T) &#123; postOrderTraverse(T-&gt;leftChild); postOrderTraverse(T-&gt;rightChild); cout &lt;&lt;T-&gt;data &lt;&lt; " "; &#125; &#125; int getLeafNode(BiTree T) &#123; if(NULL == T) return 0; if(NULL == T-&gt;leftChild &amp;&amp; NULL == T-&gt;rightChild) return 1; return getLeafNode(T-&gt;leftChild) + getLeafNode(T-&gt;rightChild); &#125; int main() &#123; BiTree T; cout &lt;&lt;"Please input the data of the BiTree in the preorder. Type in \"*\" to represent the NULL."&lt;&lt; endl; createBiTree(T); cout &lt;&lt; "\nPreorder:" &lt;&lt; endl; preOrderTraverse(T); cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; "Inorder:" &lt;&lt; endl; inOrderTraverse(T); cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; "Postorder:" &lt;&lt; endl; postOrderTraverse(T); cout &lt;&lt; endl &lt;&lt; endl; cout &lt;&lt; "The number of LeafNodes is:" &lt;&lt; endl; cout &lt;&lt; getLeafNode(T) &lt;&lt; endl; return 0; &#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;malloc.h&gt; typedef struct BiTNode&#123;//建立二叉链表的储存结构 char data; struct BiTNode *lchild,*rchild;&#125;BiTNode, * BiTree;int count=0;void CreateBiTree(BiTree &amp;T) &#123; char ch; scanf("%c",&amp;ch);//扫描得到字符 if(ch=='*') T=NULL;//如果字符为空，则根节点为空 else &#123; if (!(T=(BiTNode *)malloc(sizeof(BiTNode))))//否则建立根节点 exit(-1); T-&gt;data = ch;//根节点数据域 CreateBiTree(T-&gt;lchild);//构造左子树 CreateBiTree(T-&gt;rchild);//构造右子树 &#125; &#125; void PreOrder(BiTree &amp;T)&#123; //先序遍历 if(T != NULL)&#123; printf("%c",T-&gt;data); PreOrder(T-&gt;lchild); PreOrder(T-&gt;rchild); &#125;&#125;void CountLeaf(BiTree T,int&amp; count)//累加和存储于变量count中，其初值为0 &#123; if(T)//二叉树T如果为空，则什么都不做；不为空时往下执行 &#123; if((!T-&gt;lchild)&amp;&amp;(!T-&gt;rchild))//如果二叉树左子树和右子树皆为空，说明该二叉树根节点为叶子节点，count加1。 count++; CountLeaf(T-&gt;lchild,count);//遍历左子树叶子节点个数 CountLeaf(T-&gt;rchild,count);//遍历右子树叶子节点个数 &#125; &#125; int main()&#123; BiTree T; printf("Please type in the BiTree data in preorder, type in * to represent NULL:\n"); CreateBiTree(T); printf("PreOrder:"); PreOrder(T); CountLeaf(T,count); printf("\nThe number of leafnodes is: %d\n",count); system("pause");&#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>大二</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二下 数据结构（三）]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E4%B8%89%EF%BC%89%2F</url>
    <content type="text"><![CDATA[适用于电商专业大二年级下学期，数据结构专业选修课，不是物联网同学大二上的数据结构哦。年代久远，仅供参考。 目标：线性表在链式存储结构的实现。内容：已知某线性表中的数据元素由三个数据项（学号、姓名、成绩）组成，且数据元素按照学号递增有序，表长为n。选择带头结点的单链表作为存储结构。设计并实现如下算法：（1） n个数据元素作为初始数据，置入相应的存储结构中。(测试时至少10个数据元素），输出线性表中各数据元素。（2）将新的数据元素x插入到线性表的适当位置上，以保持该表的有序性，输出线性表中各数据元素。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define MAX 10 //链表中数据的最大个数 struct stu&#123; int num; char name[20]; float score;&#125;student,temp;//创建结构体数组 typedef struct LNode&#123;//定义单链表的存储结构 stu student; struct LNode * next;&#125;LNode,* LinkList;LNode *p;void Create_LinkList(LinkList &amp;L,int n)&#123;//逆向插法建立单链表 L=(LinkList)malloc(sizeof(LNode)); if(!L)&#123; printf("Failed to create the LinkList！\n"); exit(-1); &#125; L-&gt;next=NULL;//建立一个带头结点的单链表 for(int i=n;i&gt;0;i--)&#123; p=(LinkList)malloc(sizeof(LNode));//生成新结点 printf("Please input the data(number/name/score) of NO.%d student:",n-i+1); scanf("%d%s%f",&amp;p-&gt;student.num,p-&gt;student.name,&amp;p-&gt;student.score); p-&gt;next=L-&gt;next; L-&gt;next=p; &#125; &#125;void Insert(LinkList L)&#123; p=(LinkList)malloc(sizeof(LNode));//生成新结点 printf("Please input the data(number/name/score) to be inserted:"); scanf("%d%s%f",&amp;p-&gt;student.num,p-&gt;student.name,&amp;p-&gt;student.score); p-&gt;next=L-&gt;next; L-&gt;next=p;&#125;void Display(LinkList L)&#123; printf("\nThe data in storage are：\nNO. NAME SCORE\n"); LNode *s; s=L; while(s-&gt;next!=NULL)&#123; s=s-&gt;next; printf(" %d %-s %-.1f\n",s-&gt;student.num,s-&gt;student.name,s-&gt;student.score); &#125; printf("\n"); &#125; void LinkList_Sort(LinkList L)&#123; LNode *p, *q, *min; p=L-&gt;next; while(p != NULL)&#123; min = p; q = p-&gt;next; while (q != NULL)&#123; if ((min-&gt;student.num) &gt; (q-&gt;student.num)) min = q; q = q-&gt;next; &#125; if (min != p)&#123; temp.num = min-&gt;student.num; strcpy(temp.name,min-&gt;student.name); temp.score=min-&gt;student.score; min-&gt;student.num = p-&gt;student.num; strcpy(min-&gt;student.name ,p-&gt;student.name); min-&gt;student.score = p-&gt;student.score; p-&gt;student.num = temp.num; strcpy(p-&gt;student.name , temp.name); p-&gt;student.score = temp.score; &#125; p = p-&gt;next; &#125;&#125;int main()&#123; LinkList L; Create_LinkList(L,MAX); Display(L); Insert(L); LinkList_Sort(L); Display(L); system("pause"); &#125; 日常帮写第二份12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define LIST_INIT_SIZE 100struct students&#123; int num; char name[30]; float score;&#125;student,temp;typedef struct LNode&#123; students student; struct LNode * next;&#125;LNode,* LinkList;LinkList L;LNode *p;int CreateLinkList(LinkList &amp;L,int n)&#123; L=(LinkList)malloc(sizeof(LNode)); if(!L)&#123; printf("表头结点开辟失败！\n"); exit(-1); &#125; L-&gt;next=NULL; for(int i=n;i&gt;0;i--)&#123; p=(LinkList)malloc(sizeof(LNode)); printf("请输入第%d位学生信息学号/姓名/成绩:",n-i+1); scanf("%d%s%f",&amp;p-&gt;student.num,p-&gt;student.name,&amp;p-&gt;student.score); p-&gt;next=L-&gt;next; L-&gt;next=p; &#125; return 0;&#125;int InsertLinkList(LinkList L)&#123; p=(LinkList)malloc(sizeof(LNode)); printf("请输入待插入的数据（学号/姓名/成绩）:"); scanf("%d%s%f",&amp;p-&gt;student.num,p-&gt;student.name,&amp;p-&gt;student.score); p-&gt;next=L-&gt;next; L-&gt;next=p; return 0;&#125;int PrintLinkList(LinkList L)&#123; printf("\n单链表中的数据为：\n学号 姓名 成绩\n"); LNode *s; s=L; while(s-&gt;next!=NULL)&#123; s=s-&gt;next; printf(" %d %-s %-.1f\n",s-&gt;student.num,s-&gt;student.name,s-&gt;student.score); &#125; printf("\n"); return 0;&#125; int LinkListSort(LinkList L)&#123; LNode *p, *q, *min; p=L-&gt;next; while(p != NULL)&#123; min = p; q = p-&gt;next; while (q != NULL)&#123; if ((min-&gt;student.num) &gt; (q-&gt;student.num)) min = q; q = q-&gt;next; &#125; if (min != p)&#123; temp.num = min-&gt;student.num; strcpy(temp.name,min-&gt;student.name); temp.score=min-&gt;student.score; min-&gt;student.num = p-&gt;student.num; strcpy(min-&gt;student.name ,p-&gt;student.name); min-&gt;student.score = p-&gt;student.score; p-&gt;student.num = temp.num; strcpy(p-&gt;student.name , temp.name); p-&gt;student.score = temp.score; &#125; p = p-&gt;next; &#125; return 0;&#125;int main()&#123; CreateLinkList(L,10); InsertLinkList(L); LinkListSort(L); PrintLinkList(L); return 0;&#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>大二</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二下 数据结构（二）]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E4%BA%8C%EF%BC%89%2F</url>
    <content type="text"><![CDATA[适用于电商专业大二年级下学期，数据结构专业选修课，不是物联网同学大二上的数据结构哦。年代久远，仅供参考。 目标：线性表在顺序存储结构的实现。内容：已知某线性表中的数据元素由三个数据项（学号、姓名、成绩）组成，且数据元素按照学号递增有序，表长为n。选择顺序表 作为存储结构。设计并实现如下算法：（1）n个数据元素作为初始数据，置入相应的存储结构中。(测试时至少10个数据元素），输出线性表中各数据元素。（2）将新的数据元素x插入到线性表的适当位置上，以保持该表的有序性，输出线性表中各数据元素。 代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define LIST_INIT_SIZE 100#define MAX 10 //顺序表数据最大个数 struct stu&#123; int num; char name[20]; float score;&#125;student[MAX],temp;//创建结构体数组 typedef struct&#123;//定义线性表的动态分配顺序存储结构 stu *elem; int length; int listsize;&#125;Sqlist;int InsertList(Sqlist &amp;L)&#123;//插入数据 int i,insert_space; scanf("%d%s%f",&amp;temp.num,temp.name,&amp;temp.score); for(i=0;i&lt;L.length;i++)&#123; if(temp.num&lt;L.elem[i].num)&#123; break; &#125; &#125; insert_space=i; for(i=L.length-1;i&gt;=insert_space;i--)&#123; L.elem[i+1].num=L.elem[i].num; strcpy(L.elem[i+1].name,L.elem[i].name); L.elem[i+1].score=L.elem[i].score; &#125; L.elem[insert_space].num=temp.num; strcpy(L.elem[insert_space].name,temp.name); L.elem[insert_space].score=temp.score; L.length++; return 0;&#125;int InitList_Sq(Sqlist &amp;L)&#123; //构造一个空的线性表L L.elem=(stu *)malloc(LIST_INIT_SIZE*sizeof(stu)); if(L.elem==NULL) &#123; printf("Allocation failed!\n"); exit(0); &#125; printf("Allocation successed!\n"); L.length=0; L.listsize=LIST_INIT_SIZE; //录入原始信息 int insert_space,j,i=0; for(j=0;j&lt;MAX;j++)&#123; printf("Please input the data(number/name/score) of NO.%d student:",j+1); InsertList(L); &#125; return 0;&#125;int DisplayList(Sqlist &amp;L)&#123;//显示线性表中的所有数据 printf("\n线性表中的数据如下：\n学号 姓名 成绩\n"); for(int i=0;i&lt;L.length;i++)&#123; printf(" %d %-s %-.1f\n",L.elem[i].num,L.elem[i].name,L.elem[i].score); &#125; return 0; &#125;main()&#123; Sqlist L; //声明线性表L InitList_Sq(L); DisplayList(L); printf("\nPlease input the data X to be inserted(number/name/score):"); InsertList(L); printf("\n*******插入新数据X后*******"); DisplayList(L); system("pause"); &#125; 日常帮写第二份123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;#define LIST_INIT_SIZE 100#define MAX 10 struct stu&#123; int num; char name[20]; float score;&#125;student[MAX],temp;typedef struct&#123; stu *elem; int length; int listsize;&#125;Sqlist;int InitList_Sq(Sqlist &amp;L)&#123; //构造一个空的线性表L L.elem=(stu *)malloc(LIST_INIT_SIZE*sizeof(stu)); if(L.elem==NULL) &#123; printf("内存分配成功！\n"); exit(0); &#125; printf("内存分配失败！\n"); L.length=0; L.listsize=LIST_INIT_SIZE; int insert_space,j,i=0; for(i=0;i&lt;MAX;i++)&#123; printf("请输入第%d位学生信息学号/姓名/成绩）:",i+1); scanf("%d%s%f",&amp;temp.num,temp.name,&amp;temp.score); for(j=0;j&lt;L.length;j++) &#123; if(temp.num&lt;L.elem[j].num) &#123; break; &#125; &#125; insert_space=j; for(j=L.length-1;j&gt;=insert_space;j--) &#123; L.elem[j+1].num=L.elem[j].num; strcpy(L.elem[j+1].name,L.elem[j].name); L.elem[j+1].score=L.elem[j].score; &#125; L.elem[insert_space].num=temp.num; strcpy(L.elem[insert_space].name,temp.name); L.elem[insert_space].score=temp.score; L.length++; &#125; return 0;&#125;int InsertList(Sqlist &amp;L)&#123; int i,insert_space; printf("\n请输入待插入的数据（学号/姓名/成绩）:"); scanf("%d%s%f",&amp;temp.num,temp.name,&amp;temp.score); for(i=0;i&lt;L.length;i++) &#123; if(temp.num&lt;L.elem[i].num) &#123; break; &#125; &#125; insert_space=i; for(i=L.length-1;i&gt;=insert_space;i--) &#123; L.elem[i+1].num=L.elem[i].num; strcpy(L.elem[i+1].name,L.elem[i].name); L.elem[i+1].score=L.elem[i].score; &#125; L.elem[insert_space].num=temp.num; strcpy(L.elem[insert_space].name,temp.name); L.elem[insert_space].score=temp.score; L.length++; return 0;&#125;int DisplayList(Sqlist &amp;L)&#123; printf("\n线性表中的数据如下：\n学号 姓名 成绩\n"); for(int i=0;i&lt;L.length;i++)&#123; printf(" %d %-s %-.1f\n",L.elem[i].num,L.elem[i].name,L.elem[i].score); &#125; return 0; &#125;main()&#123; Sqlist List; InitList_Sq(List); DisplayList(List); InsertList(List); DisplayList(List); return 0;&#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>大二</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大二下 数据结构（一）]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%20%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%88%E4%B8%80%EF%BC%89%2F</url>
    <content type="text"><![CDATA[适用于电商专业大二年级下学期，数据结构专业选修课，不是物联网同学大二上的数据结构哦。年代久远，仅供参考。 目标：复习C语言的相关知识：（1）数组（顺序存储方法）（2）结构（构造多数据项的数据元素类型） 内容：（1）定义student[n]数组，数组元素为（学号、姓名、成绩），n取值10。（2）向数组中读入原始数据，其中有重复学号的数据，输出原始的数组数据。（3）删除有重复学号的数据（保留第一个），输出处理后的数组数据。 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include &lt;time.h&gt;#include&lt;string.h&gt;void timeclock();int main()&#123; int n = 10; struct stu &#123; int num; char name[20]; float score; &#125;student[n];//创建结构体数组 timeclock(); //加载系统时间 for(int i=0;i&lt;n;i++) &#123; printf("请输入第%d名同学的个人信息：\n",i+1); printf("学号：NO."); scanf("%d",&amp;student[i].num); printf("姓名："); scanf("%s",student[i].name); printf("成绩："); scanf("%f",&amp;student[i].score); printf("\n"); &#125;//录入个人信息 printf("成绩录入完毕。\n\n序号 学号 姓名 成绩\n"); for(int i=0;i&lt;n;i++) &#123; printf(" %2d %d %-s %-.1f\n",i+1,student[i].num,student[i].name,student[i].score); &#125;//输出原始的数组数据 for(int i=0;i&lt;n;i++)&#123; for(int j=i+1;j&lt;n;j++)&#123; while(student[i].num == student[j].num) &#123; for(int k=j;k&lt;n;k++)&#123; student[k].num = student[k+1].num; strcpy(student[k].name,student[k+1].name); student[k].score = student[k+1].score; &#125; n--; &#125; &#125; &#125; //删除有重复学号的数据（保留第一个） printf("处理后的数据如下：\n\n序号 学号 姓名 成绩\n"); for(int i=0;i&lt;n;i++) &#123; printf(" %2d %d %-s %-.1f\n",i+1,student[i].num,student[i].name,student[i].score); &#125;//输出处理后的数组数据 system("pause"); &#125;void timeclock()&#123; time_t rawtime; struct tm * timeinfo; time ( &amp;rawtime ); timeinfo = localtime ( &amp;rawtime ); printf ( "\n欢迎登陆学生信息管理系统，系统时间为: %s\n", asctime (timeinfo) ); &#125; 日常帮写了第二份12345678910111213141516171819202122232425262728293031323334353637383940414243444546#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;#include&lt;string.h&gt;int main()&#123; int n = 10; struct stu &#123; int num; char name[20]; float score; &#125;student[n]; for(int i=0;i&lt;n;i++) &#123; printf("请输入第%d名同学的学号，姓名，成绩：",i+1); scanf("%d%s%f",&amp;student[i].num,student[i].name,&amp;student[i].score); &#125; printf("成绩录入完毕。\n\n序号 学号 姓名 成绩\n"); for(int i=0;i&lt;n;i++) &#123; printf(" %2d %d %s %.1f\n",i+1,student[i].num,student[i].name,student[i].score); &#125;//按顺序输出 for(int i=0;i&lt;n;i++)&#123; for(int j=i+1;j&lt;n;j++)&#123; while(student[i].num == student[j].num) &#123; for(int k=j;k&lt;n;k++)&#123; student[k].num = student[k+1].num; strcpy(student[k].name,student[k+1].name); student[k].score = student[k+1].score; &#125; n--; &#125; &#125; &#125; //删除重复学号的信息 printf("处理后的数据如下：\n\n序号 学号 姓名 成绩\n"); for(int i=0;i&lt;n;i++) &#123; printf(" %2d %d %s %.1f\n",i+1,student[i].num,student[i].name,student[i].score); &#125;//输出处理后的数据 system("pause");&#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>大二</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大一下 C语言大作业]]></title>
    <url>%2F2018%2F02%2F06%2F%E5%A4%A7%E4%B8%80%E4%B8%8BC%E8%AF%AD%E8%A8%80%E5%A4%A7%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[Hi, 这篇文章是关于大一年级下学期C语言最后的大作业，年代久远，仅供参考哦~ 题目：Coursework 2016 DeadLine June 27thWrite a program that will help elementary school pupils practice math.a) The program will first ask the user for his/her ID number (including two letters &amp; 4 digits), e.g.Please input your four digit ID no: AB1234 The program should have input validation.Then the program prompts three choices:(1) Start a test(2) Check scores(3) Exit Test: the program will give 10 math problems, e.g.: 12 * 3 = 3648 + 32 = 80…56 / 28 = 2 Note:i) Pupils will answer each problem before the next one is given. ii) The problems should include addition, subtraction, multiplication and division. They are randomly generated. iii) Randomly generates numbers for problems. However, must ensure that both the problem and the result are no larger than two digits. The problem and the result should be greater than or equal to zero. The divisor cannot be zero. iv) After ten problems are finished, record the time used by the student to do the ten problems. v) Gives a score to each student. Saves this student’s ID, his/her score and the time used into a file named ‘record.txt’. vi) Print the following information on the screen:Prob. | Correct Answ. | Ur Answ c) Check scores: Searches the file ‘record.txt’ and lists all the historical scores for this student, e.g.: Your previous records are:AB1234 80 150 secondsAB1234 50 182 secondsAB1234 90 98 seconds You will be marked based on your program’s:(1) Correctiveness(2) Readability(3) Robustness(4) Conciseness 代码：注意当年我在大作业里用了goto，但后来我得知goto会影响健壮性，会扣分的，所以建议不要用。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; #include &lt;time.h&gt; #include &lt;ctype.h&gt;#include &lt;string.h&gt; main()&#123; char ID[7],option[2],symbol[10],convert[3],answer[10][3]; int n,i,a[10],b[10],result[10],score=0,grade,timeduation; time_t start, end; FILE *data; void check(char[]); do&#123; printf("Please input your four digit ID (e.g.AB1234): "); scanf("%s",ID); &#125;while(!(ID[6]=='\0'&amp;&amp;isalpha(ID[0])&amp;&amp;isalpha(ID[1])&amp;&amp;isdigit(ID[2])&amp;&amp;isdigit(ID[3])&amp;&amp;isdigit(ID[4])&amp;&amp;isdigit(ID[5])));//to inspect whether the user type in the correct ID choice://use goto function to return as a loop printf("\nPlease type in the corresponding number to continue.\n(1) Start a test\n(2) Check scores\n(3) Exit\n"); scanf("%s",option); if(option[1]!='\0'||isdigit(option[0])==0) &#123; printf("Wrong Input!"); goto choice; &#125;//to inspect whether user type in the correct number switch(option[0])//use ASCII to get the correspoding funtion &#123; case 49:getchar(); printf("---------------------------------------\n"); //start a test srand((unsigned)time(NULL)); time(&amp;start); for(i=0;i&lt;10;i++) &#123; n=rand()%4; do&#123; a[i]=rand()%100; b[i]=rand()%100; switch(n)&#123; case 0:symbol[i] = '+'; result[i] = a[i] + b[i]; break; case 1:symbol[i] = '-'; result[i] = a[i] - b[i]; break; case 2:symbol[i] = '*'; result[i] = a[i] * b[i]; break; case 3:symbol[i] = '/'; result[i] = a[i] / b[i]; &#125; &#125;while(result[i] &gt; 99 || result[i] &lt; 0 || n==3 &amp;&amp; a[i] % b[i] != 0); printf("%2d %c %2d = ", a[i], symbol[i], b[i]); itoa(result[i], convert, 10); gets(answer[i]); if (!strcmp(convert, answer[i])) &#123; score += 10; &#125; &#125; time(&amp;end); printf("---------------------------------------\nBravo! You have got %d score(s) in %ld seconds!\n",score,end-start); printf("Prob. | Correct Answ. | Ur Answ\n"); for(i=0;i&lt;10;i++) printf("(%-2d) %-2d %c %-2d = %-3d %s\n",i+1,a[i],symbol[i],b[i],result[i],answer[i]); data = fopen("record.txt", "a+"); //save the information into a file fprintf(data,"%s %d %d\n",ID,score,end-start); fclose(data); goto choice;//return to the option menu break; case 50:check(ID); goto choice;//return to the option menu break; case 51:printf("Thanks for testing! This program is about to quit.\n");//quit the program break; default:printf("Wrong Input! "); goto choice; &#125; system("pause");&#125;void check(char ID[])&#123; FILE *file; int getgrade,gettime,j=0; char getid[6]; file=fopen("record.txt","r"); if(file==NULL) printf("You have never done the test before, so there is no record."); fscanf(file,"%s %d %d",getid,&amp;getgrade,&amp;gettime); printf("Your previous records are:\n");//print the previous grades while(!feof(file)) &#123; if(strncmp(ID,getid,6)==0) &#123; printf("%s %d %d \n\n",ID,getgrade,gettime); j=1; &#125; fscanf(file,"%s %d %d",getid,&amp;getgrade,&amp;gettime); &#125; if(j==0) printf("Sorry, there is no previou grade.\n"); fclose(file);&#125; 后来又随便帮别人写了一份差不多的，也放上来吧123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt; #include &lt;time.h&gt; #include &lt;ctype.h&gt; #include &lt;string.h&gt; //This is a program that will help elementary school pupils practice math. int main()&#123; char fid[10],ID[10],symbol[10],convert[3],answer[10][3]; int j=0,i,op,n,a[10],b[10],result[10],score=0,grade,timeduation; FILE *data; time_t tstart, tend; do&#123; printf("Please input your four digit ID number such as AB1234: "); scanf("%s",ID); if(!(ID[6]=='\0'&amp;&amp;isalpha(ID[0])&amp;&amp;isalpha(ID[1])&amp;&amp;isdigit(ID[2])&amp;&amp;isdigit(ID[3])&amp;&amp;isdigit(ID[4])&amp;&amp;isdigit(ID[5]))) printf("Sorry, invalid ID. "); &#125;while(!(ID[6]=='\0'&amp;&amp;isalpha(ID[0])&amp;&amp;isalpha(ID[1])&amp;&amp;isdigit(ID[2])&amp;&amp;isdigit(ID[3])&amp;&amp;isdigit(ID[4])&amp;&amp;isdigit(ID[5])));//To check the ID invalidation choose: printf("\nPlease type in the number to continue.\n(1) Start a test\n(2) Check scores\n(3) Exit\n"); scanf("%d",&amp;op); switch(op)//let user to choose what function they want &#123; case 1: getchar(); printf("\n"); srand((unsigned)time(NULL)); time(&amp;tstart); for(i=0;i&lt;10;i++)//to start the test &#123; n=rand()%4; do&#123; a[i]=rand()%100; b[i]=rand()%100; switch(n)&#123; case 0:symbol[i] = '+'; result[i] = a[i] + b[i]; break; case 1:symbol[i] = '-'; result[i] = a[i] - b[i]; break; case 2:symbol[i] = '*'; result[i] = a[i] * b[i]; break; case 3:symbol[i] = '/'; result[i] = a[i] / b[i]; &#125; &#125;while(result[i] &gt; 99 || result[i] &lt; 0 || n==3 &amp;&amp; a[i] % b[i] != 0); printf("%2d %c %2d = ", a[i], symbol[i], b[i]); itoa(result[i], convert, 10); gets(answer[i]);//gather the user's answers if (!strcmp(convert, answer[i])) &#123; score += 10; &#125; &#125; time(&amp;tend);//time ends printf("\nYou have got %d score(s) in %ld seconds!\n",score,tend-tstart); printf("Prob. | Correct Answ. | Ur Answ\n"); //print the test information for(i=0;i&lt;10;i++) &#123; printf("(%2d) %2d %c %2d = %3d %s\n",i+1,a[i],symbol[i],b[i],result[i],answer[i]); &#125; data = fopen("record.txt", "a+"); fprintf(data,"%s %3d %3ld\n",ID,score,tend-tstart); fclose(data); goto choose; break; case 2: data=fopen("record.txt","r"); if(data==NULL) &#123; printf("You have never done the test before."); goto choose; &#125; fscanf(data,"%s %d %d",fid,&amp;grade,&amp;timeduation);//scan the user's information printf("Your previous records are:\n"); while(!feof(data)) &#123; if(strncmp(ID,fid,6)==0)//check the user's name &#123; printf("%s %d %d \n\n",fid,grade,timeduation); j=1; &#125; fscanf(data,"%s %d %d",fid,&amp;grade,&amp;timeduation); &#125; if(j==0) &#123; printf("Sorry, there is no previous record.\n"); &#125; fclose(data); goto choose; break; case 3: printf("It's about to quit! \n"); break; //quit default: printf("Wrong Number! "); goto choose; &#125; return 0;&#125; 附录：我们那年的注意事项截止日期是6月27日，迟交每日扣10%，最多扣至50%。至期末考试关闭提交系统 源代码为CPP文件,且已通过TC3编译,没有任何编译错误源文件以完整学号作为文件名，CPP作为扩展名，不得压缩将原文件作为附件以bupt.edu.cn邮箱发送至cw@wss.buptsem.net。邮件主题为完整学号提交后自行到课程网站确认提交结果文件名和邮件主题，不能是全角数字不要重复提交，每重复提交一次，扣减10%]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>大一</tag>
        <tag>C语言</tag>
        <tag>Coursework</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[大一下 C语言作业合集(EX01-EX11)]]></title>
    <url>%2F2018%2F02%2F05%2F%E5%A4%A7%E4%B8%80%E4%B8%8BC%E8%AF%AD%E8%A8%80%E4%BD%9C%E4%B8%9A%E5%90%88%E9%9B%86%2F</url>
    <content type="text"><![CDATA[Hi, 由于文件存放年代久远，且我在当时学习过程中可能有改动，仅供参考。 EX01 Programming Environment and Basic Input/Output1.Write a program that prints “This is my first program!” on the screen.(a)Save this program onto your own disk with the name of e2-1a;(b)Run this program without opening Turbo C;(c)Modify this program to print “This is my second program!”, then save it as e2-1b. Please do not overwrite the first program.12345678#include &lt;stdio.h&gt;int main ()&#123; printf("This is my first program!\n\n\n\n"); getchar(); return 0;&#125; 12345678#include &lt;stdio.h&gt;int main ()&#123; printf("This is my second program!\n\n\n\n"); getchar(); return 0;&#125; 2.Write a program that prints the number 1 to 4 on the same line. Write the program using the following methods:(a)Using four “printf” statements.(b)Using one “printf” statement with no conversion specifier (i.e. no ‘%’).(c)Using one “printf” statement with four conversion specifiers123456789101112131415161718#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("1 "); printf("2 "); printf("3 "); printf("4 \n");// the first four statements are as the teacher asked. printf("1 2 3 4\n");//the second statement is for "using one printf". int a=1,b=2,c=3,d=4; printf("%d %d %d %d \n",a,b,c,d);//the last statement is for conversion specifier. system ("pause");&#125; 3．(a) Write a program that calculates and displays the number of minutes in 15 days. (b) Write a program that calculates and displays how many hours 180 minutes equal to. (c) (Optional) How about 174 minutes?1234567891011121314#include&lt;stdio.h&gt;int main()&#123; int a, minutes; printf("Please input the number of days from 0-15 \n"); scanf("%d",&amp;a); minutes = a * 24 * 60 ; printf("the minutes is %d \n",minutes); getchar(); return 0; &#125; 1234567891011#include&lt;stdio.h&gt; int main()&#123; int a,hour; a = 180; hour = a / 60; printf("180 minutes equal to %d hours",hour); getchar(); return 0;&#125; 123456789101112#include&lt;stdio.h&gt; int main()&#123; int a; float hour; a = 174; hour = a / 60; printf("180 minutes equal to %f hours",hour); getchar(); return 0;&#125; EX02 Data Types and Arithmetic Operations You purchase a laptop computer for $889. The sales tax rate is 6 percent. Write and execute a C program that calculates and displays the total purchase price (net price + sales tax).12345678910111213#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int netprice; float salestax; netprice = 889; salestax = 889.00 * 0.06; float total; total = netprice + salestax; printf("The total purchase price is %f \n\n\n",total); system("pause");&#125; 2．Write a program that reads in the radius of a circle and prints the circle’s diameter, circumference and area. Use the value 3.14159 for “”.12345678910111213141516#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("Please type the radius of the circle \n"); float radius; scanf("%f",&amp;radius); float diameter,circumference,area; diameter = 2 * radius; circumference = 2 * 3.14159 * radius; area = 3.14159 * radius * radius; printf("The diameter of the circle is %f \n",diameter); printf("The circumference of the circle is %f \n",circumference); printf("The area of the circle is %f \n",area); system("pause");&#125; 3．Write a program that reads in two numbers: an account balance and an annual interest rate expressed as a percentage. Your program should then display the new balance after a year. There are no deposits or withdraws – just the interest payment. Your program should be able to reproduce the following sample run:Interest calculation program.Starting balance? 6000Annual interest rate percentage? 4.25Balance after one year: 62551234567891011121314151617#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("Balance calculation program \n"); printf("Starting balance? "); int balance; scanf("%d \n",&amp;balance); printf("Annual interest rate percentage? "); float rate; scanf("&amp;4.2f \n",rate); float addbalance; addbalance = balance + balance * rate * 0.01 ; printf("Balance after one year : %f \n",addbalance); system("pause");&#125; EX03 Selection Structure1．Write a C program that accepts a student’s numerical grade, converts the numerical grade to Passed (grade is between 60-100), Failed (grade is between 0-59), or Error (grade is less than 0 or greater than 100).12345678910111213141516#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("Please type your grades!\n"); int grade; scanf("%d",&amp;grade); if ((grade &gt;= 60)&amp;&amp;(grade &lt;= 100)) printf("Pass\n"); else if ((grade &gt;= 0)&amp;&amp;(grade &lt;=59)) printf("Fail\n"); else printf("Error\n"); system("pause");&#125; 2．Write a program that asks the user to enter an integer number, then tells the user whether it is an odd or even number.123456789101112131415#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("Please enter a integer number you want to test\n"); int num,tester; scanf("%d",&amp;num); tester = num % 2; if (tester == 0) printf("Even\n"); else printf("Odd\n"); system("pause");&#125; 3．Write a program that reads in three integers and then determines and prints the largest in the group.12345678910111213141516#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int a,b,c,max; printf("Please enter three integers to be determined \n "); scanf("%d%d%d",&amp;a,&amp;b,&amp;c); max = a; if (max &lt;=b) max = b; if (max &lt;=c) max = c; printf("max = %d \n",max); system("pause");&#125; EX04 ‘Switch’ Statement and Simple “While” Repetition Statement Write a program that reads three integers an abbreviated date (for example: 26 12 94) and that will print the date in full; for example: 26th December 1994. The day should be followed by an appropriate suffix, ‘st’, ‘nd’, ‘rd’ or ‘th’. Use at least one switch statement.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; printf("Please type in 3 integers to be converted, for example:26 12 94 \n"); int day,month,year; scanf("%d%d%d",&amp;day,&amp;month,&amp;year); switch(day) &#123; case 1: printf("1st "); break; case 2: printf("2nd "); break; case 3: printf("3rd "); break; case 11: printf("11st "); break; case 12: printf("12nd "); break; case 13: printf("13rd "); break; case 21: printf("21st "); break; case 22: printf("22nd "); break; case 23: printf("23rd "); break; case 31: printf("31st "); break; default: printf("%dth ",day); &#125; switch(month) &#123; case 1: printf("January "); break; case 2: printf("February "); break; case 3: printf("March "); break; case 4: printf("April "); break; case 5: printf("May "); break; case 6: printf("June "); break; case 7: printf("July "); break; case 8: printf("August "); break; case 9: printf("September "); break; case 10: printf("October "); break; case 11: printf("November "); break; case 12: printf("December "); break; &#125; if(year&gt;=0 &amp;&amp; year&lt;=16) printf("20%d",year); else printf("19%d",year); system("pause");&#125; 2．Write a C program that uses a while loop to calculate and print the sum of the even integers from 2 to 30.1234567891011121314#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int i=2, sum=0; while(i&lt;=30) &#123; sum = sum + i; i = i + 2; &#125; printf("The Sum from 0 to 30 is %d \n",sum); system("pause");&#125; A large chemical company pays its sales staff on a commission basis. They receive £200 per week plus 9% of their gross sales for that week. For example, someone who sells £5000 of chemicals in one week will earn £200 plus 9% of £5000, a total of £650. Develop a C program that will input each salesperson’s sales for the previous week, and print out their salary. Process one person’s figures at a time. Enter sales in pounds (-1 to end): 5000.00 Salary is: 650.00 Enter sales in pounds (-1 to end): 00.00 Salary is: 200.00 Enter sales in pounds (-1 to end): 1088.89 Salary is: 298.00 Enter sales in pounds (-1 to end): -1 1234567891011121314151617#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; #define CUTOFF -1 float sales,salary; sales = 0; while (sales &gt; CUTOFF) &#123; printf("Please type in your gross sales for this week in pounds (-1 to end):"); scanf("%f",&amp;sales); salary = 200 + sales * 0.09 ; if(sales&gt;CUTOFF) printf("Salary is %6.2f \n",salary); &#125; system("pause");&#125; Optional： A mail order company sells five different products whose retail prices are shown in the following table:Product Number Retail Price (in pounds) 1 2.98 2 4.50 3 9.98 4 4.49 5 6.87Write a C program that reads in a series of pairs of numbers as follows: (1). Product number (2). Quantity sold for one dayYour program should use a switch statement to help determine the retail price for each product, and should use a sentinel-controlled loop to calculate the total retail value of all products sold in a given week (7days).123456789101112131415161718192021222324252627282930313233343536373839#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int numday,number,quantity; float total; numday = 1; while(numday&lt;=7) &#123; printf("Please type in the product number and the quantity sold for day %d ",numday); scanf("%d%d",&amp;number,&amp;quantity); numday = numday + 1; switch(number) &#123; case 1: total = total + 2.98 * quantity; break; case 2: total = total + 4.50 * quantity; break; case 3: total = total + 9.98 * quantity; break; case 4: total = total + 4.49 * quantity; break; case 5: total = total + 6.87 * quantity; break; default: printf("Error!\n"); &#125; &#125; printf("The total retail value of all products sold in this week is %6.2f \n",total); system("pause");&#125; EX05 For and Do…while Repetition Statements Write a program which uses a do/while loop to print out the first 10 powers of 2 other than 0 (ie. it prints out the values of 2^1, 2^2, …, 2^10). Use a for loop to do the same. 123456789101112131415161718192021222324#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int i = 1; int j = 1; do//This is the first loop for DO/WHILE repetiton. &#123; j = 2 * j ; i++; printf("%d ",j); &#125;while(i&lt;=10); printf("\n");//This is to turn to the new line. for(int i=1,j=1 ; i&lt;=10;i++)//This is the second loop for FOR repetiton. &#123; j = 2 * j ; printf("%d ",j); &#125; system("pause");&#125; The constant can be calculated by the infinite series: Pi = 4 - 4/3 + 4/5 - 4/7 + 4/9 - 4/11 +.... Write a C program that uses a do/while loop to calculate using the series. The program should ask the user how many terms in the series should be used. Thus if the user enters ‘3’, then the program should calculate Pi as being 4 - 4/3 + 4/5. 1234567891011121314151617181920212223#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int term; int i = 1, j = 1; float Pi = 0; float k; printf("Please type in how mant terms in the series should be used."); scanf("%d",&amp;term); do &#123; k=(float)4/(2*i-1)*j*1.00; Pi=Pi+k; j=j*(-1); i++; &#125; while(i&lt;=term); printf("%f",Pi); system("pause");&#125; Write a program that prints the following diamond shape. You may use printf statements that print either a single asterisk (*) or a single blank. Maximize your use of repetition (with nested for statements) and minimize the number of printf statements.编辑器阵亡，详情见题目。 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int n=5,t=1,h=10; while(t&lt;=n) &#123; int i=1; while(i&lt;h+t) &#123; if(i&lt;=h-t) &#123; printf(" "); &#125; else if(i&gt;h-t&amp;&amp;i&lt;h+t) &#123; printf("*"); &#125; i++; &#125; printf("\n"); t++; &#125; t=4;h=10; while(t&gt;0) &#123; int i=1; while(i&lt;h+t) &#123; if(i&lt;=h-t) &#123; printf(" "); &#125; else if(i&gt;h-t&amp;&amp;i&lt;h+t) &#123; printf("*"); &#125; i++; &#125; printf("\n"); t--; &#125; system("pause");&#125; Write a program to print a table as follows: 11= 121= 2 22= 431= 3 32= 6 33= 9….91= 9 92=18 93=27 94=36 95=45 96=54 97=63 98=72 9*9=811234567891011121314151617#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int i=1,j=1; for(i=1;j&lt;=9;i++) &#123; for(j=1;j&lt;=i;j++) &#123; printf("%d*%d=%d ",i,j,i*j); &#125; printf("\n"); &#125; system("pause");&#125; EX06 Simple Functions1.Write a C program that reads several numbers and uses the function round_to_nearest to round each of these numbers to the nearest integer. The program should print both the original number and the rounded number.123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int round_to_nearest(float);int main()&#123; float num_a;int num_b; num_a=1.0; while(num_a != 0) &#123; printf("please type in the number you want to round,and enter 0 to quit "); scanf("%f",&amp;num_a); if (num_a==0) printf("This program is about to close,please press any key to quit \n"); else &#123; num_b = round_to_nearest(num_a); printf("the original number is %f ,and the rounded number is %d \n",num_a,num_b); &#125; &#125; system("pause"); &#125;int round_to_nearest(float num_a)//Method two&#123; return (int) (num_a + 0.5);&#125;/*int round_to_nearest(float num_a)//Method One&#123; int num,num_b; num=(int)num_a; if (num-num_a&gt;0.5 || num-num_a&lt;-0.5) num_b=num+1; else num_b=num; return num_b;&#125;*/ 2.Write a program that reads three pairs of numbers and adds the larger of the first pair, the larger of the second pair and the larger of the third pair. Use a function to return the larger of each pair.12345678910111213141516171819202122232425262728293031#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;float larger_number(float,float);int main()&#123; float num1,num2,larger,total=0; int a=1; while (a&lt;=3) &#123; printf("Please type in a pair of numbers "); scanf("%f%f",&amp;num1,&amp;num2); larger=larger_number(num1,num2); total=total+larger; printf("The larger one in this pair of numbers is %f\n",larger); a++; &#125; printf("The total of three pairs of numbers is %f \n",total); system("pause");&#125;float larger_number(float num1,float num2)&#123; float larger; if(num1&gt;num2) larger=num1; else larger=num2; return larger;&#125; A car park charges a £2.00 minimum fee to park for up to 3 hours, and an additional £0.50 for each hour or part hour in excess of three hours. The maximum charge for any given 24-hour period is £10.00. Assume that no car parks for more than 24 hours at a time. Write a C program that will calculate and print the parking charges for each of 3 customers who parked their car in the car park yesterday. The program should accept as input the number of hours that each customer has parked, and output the results in a neat tabular form, along with the total receipts from the three customers: Car Hours Charge1 1.5 2.002 4.0 2.503 24.0 10.00TOTAL 29.5 14.50 The program should use the function calculate_charges to determine the charge for each customer. 123456789101112131415161718192021222324252627282930313233343536373839404142#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;float calculate_charges(float);int main()&#123; float hour1,hour2,hour3,charge1,charge2,charge3,total_hours=0,total_charges=0; printf("Please type in three car's parking hours (from 0 to 24) \n"); scanf("%f%f%f",&amp;hour1,&amp;hour2,&amp;hour3); charge1=calculate_charges(hour1); charge2=calculate_charges(hour2); charge3=calculate_charges(hour3); printf("Car Hours Charge\n"); printf("1%10.1f%10.2f\n",hour1,charge1); printf("2%10.1f%10.2f\n",hour2,charge2); printf("3%10.1f%10.2f\n",hour3,charge3); total_hours=hour1+hour2+hour3; total_charges=charge1+charge2+charge3; printf("TOTAL%7.2f%9.2f\n",total_hours,total_charges); system("pause");&#125; float calculate_charges(float hour)&#123; float charge; if(hour&gt;0&amp;&amp;hour&lt;=3) charge=2; else if(hour&gt;3&amp;&amp;hour&lt;=19) charge= 2.0+0.5*(hour-3); else if(hour&gt;19&amp;&amp;hour&lt;=24) charge=10; else printf("Unvalid value of \"hour\" \n"); return charge;&#125; EX07 More Functions Write a program that uses sentinel-controlled repetition to take an integer as input, and passes it to a function even which uses the modulus operator to determine if the integer is even. The function even should return 1 if the integer is even, and 0 if it is not. The program should take the value returned by the function even and use it to print out a message announcing whether or not the integer was even. 12345678910111213141516171819202122#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int even(int);int main()&#123; int num; printf("Please input an integer: (Crtl+Z or -1 to stop)\n"); num=1; while(scanf("%d", &amp;num)!=EOF) &#123; if(even(num)==1) printf("%d is an even number \n",num); else if(even(num)==0) printf("Sorry, %d is not an even number,try again!\n",num); &#125; system("pause");&#125;int even(int num)&#123; return (num+1)%2;&#125; Write a C program that uses the function integerPower1(base, exponent) to return the value of: base^exponent so that, for example, integerPower1(3, 4) gives the value 3 3 3 * 3. Assume that exponent is a positive, non-zero integer, and base is an integer. The function should use a for loop, and make no calls to any math library functions. 123456789101112131415161718int integerPower1(int,int);#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int base,exponent,integerPower1(int,int); printf("Please type in the base and exponent:\n"); scanf("%d%d",&amp;base,&amp;exponent); printf("The result is %d\n",integerPower1(base,exponent)); system("pause");&#125; int integerPower1(int base,int exponent)&#123; int ans=1; for(int i=1;base&gt;0&amp;&amp;exponent&gt;0&amp;&amp;i&lt;=exponent;i++) ans=ans*base; return ans;&#125; Write a C program that uses the recursive function integerPower2(base, exponent) to return the value of: base^exponent so that, for example, integerPower2(3, 4) gives the value 3 3 3 * 3. Assume that exponent is a positive, non-zero integer, and base is an integer. The function should make no calls to any math library functions.(Hint: the recursive step will use the relationship: base^exponent = base . base^exponent - 1 and the base case will be when exponent is 1 since : base1 = base.) 12345678910111213141516171819202122#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int base, exponent, integerPower2(int, int); printf("Please input base and exponent:\n"); scanf("%d %d", &amp;base, &amp;exponent); printf("Result is %d\n", integerPower2(base,exponent)); system("pause");&#125;int integerPower2(int m, int n) &#123; if (n==1) &#123; return m; &#125; else &#123; return m * integerPower2(m, n - 1); &#125; &#125; EX08 Arrays1.Write a program that reads ten numbers supplied by the user into a single subscripted array, and then prints out the average of them.123456789101112131415161718#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int numbers[10],sum=0; float average=0; for(int i =0;i&lt;10;i++) &#123; printf("Please type in an interger:\n"); scanf("%d",&amp;numbers[i]); &#125; for (int i=0;i&lt;10;i++) &#123;average=average+numbers[i];&#125; printf("Average is %f\n",average/10); system("pause");&#125; Write a program that reads ten numbers supplied by the user into a 2 by 5 array, and then prints out the maximum and minimum values held in:(a) each row (2 rows)(b) the whole array12345678910111213141516171819202122232425262728293031323334353637383940414243#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int numbers[2][5],max1,min1,max2,min2,maxall,minall; for(int i=0;i&lt;2;i++) &#123; for(int j=0;j&lt;5;j++) &#123; printf("Please type in the integer:"); scanf("%d",&amp;numbers[i][j]); &#125; printf("\n");&#125; for(int i=0;i&lt;2;i++) &#123; for(int j=0;j&lt;5;j++) &#123; printf("%d",numbers[i][j]); &#125; printf("\n");&#125; max1=min1=numbers[0][0]; for(int j=0;j&lt;5;j++) &#123; max1=max1&gt;numbers[0][j]? max1:numbers[0][j]; min1=min1&lt;numbers[0][j]? min1:numbers[0][j]; &#125; max2=min2=numbers[1][0]; for(int j=0;j&lt;5;j++) &#123; max2=max2&gt;numbers[1][j]? max2:numbers[1][j]; min2=min2&lt;numbers[1][j]? min2:numbers[1][j]; &#125; maxall=max1&gt;max2? max1:max2; minall=min1&lt;min2? min1:min2; printf("The maximum in row 1 is %d\n", max1); printf("The minimum in row i is %d\n", min1); printf("The maximum in row 2 is %d\n", max2); printf("The minimum in row 2 is %d\n", min2); printf("The maximum is %d\n", maxall); printf("The minimum is %d\n", minall); system("pause");&#125; 3．Use a single-subscripted array to solve the following problem. Read in 20 numbers, each of which is between 10 and 100, inclusive. As each number is read, print it only if it is not a duplicate of a number already read. Prepare for the “worst case” in which all 20 numbers are different. Use the smallest possible array to solve this problem.1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int i=0,duplicate=0,a[20]; do&#123; printf("Please type an interger between 10 and 100 inclusively, or it will not be printed \n"); scanf("%d",&amp;a[i]); if(a[i]&gt;=10&amp;&amp;a[i]&lt;=100) &#123; i++; continue; &#125; for(int j=0;j&lt;i;j++) if(a[i]==a[j]) &#123; duplicate=1;break; &#125; else continue; if(duplicate==0) &#123;printf("%d\n",a[i]); &#125; else duplicate=0;i++; &#125;while(i&lt;20); system("pause");&#125; EX09 More Arrays1.Write a program that enters 5 names of towns and their respective distance (an integer) from London in miles. The program will print of the names of the towns that are less than 100 miles from London. Use arrays and character strings to implement your program.1234567891011121314151617181920212223#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt; main()&#123; int distance[5]; char town[5][20]; int i=0; for(i=0;i&lt;5;i++) &#123; printf("Please type in the name of town:\n");// gets(town[i]); scanf("%s",town[i]); printf("Please type in its distance to London:\n"); scanf("%d",&amp;distance[i]); &#125; for(i=0;i&lt;5;i++) &#123; if(distance[i]&lt;100) printf("The distance from %s to London is less than 100 miles.\n",town[i]); &#125; system("pause");&#125; Write a program that prompts the user to type in four character strings, places these in an array of strings, and then prints out: (e.g. I am Peter Pan) (i) The four strings in reverse order. (e.g. Pan Peter am I) (ii) The four strings in the original order, but with each string backwards. (e.g. I ma reteP naP) (iii) The four strings in reverse order with each string backwards. (e.g. naP reteP ma I) 1234567891011121314151617181920212223242526272829303132333435363738394041424344#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt; main()&#123; char string[4][20]; printf("Please type in 4 strings.\n"); scanf("%s %s %s %s",string[0],string[1],string[2],string[3]); for(int i=3;i&gt;=0;i--) &#123; printf("%s ",string[i]);&#125; printf("\n "); for(int i=0;i&lt;4;i++) &#123; int j; for(j=0;string[i][j]!='\0';j++); for(j=j-1;j&gt;=0;j--) printf("%c",string[i][j]); printf(" "); &#125; printf("\n"); for(int i=3;i&gt;=0;i--) &#123; int j; for(j=0;string[i][j]!='\0';j++); for(j=j-1;j&gt;=0;j--) printf("%c",string[i][j]); printf(" "); &#125; printf("\n"); system("pause");&#125; /*for(int i=3;i&gt;=0;i--) &#123; for(int j=4;j&gt;=0;j--) &#123; if(string[i][j]!='\0') printf("%c",string[i][j]); &#125; printf(" "); &#125; printf("\n ");*/ EX10 Pointers Write a program that reads 5 integers into an array, and then uses four different methods of accessing the members of an array to print them out in reverse order. 12345678910111213141516171819202122232425262728293031323334353637383940#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main() &#123; int number[5],*NPtr; NPtr=number; printf("Please type in 5 integers:"); for(int i=0;i&lt;5;i++) &#123; scanf("%d",&amp;number[i]); &#125; printf("\n"); printf("METHOD ONE\n"); for(int i=4;i&gt;=0;i--) &#123; printf("%d ",number[i]); &#125; printf("\n"); printf("METHOD TWO\n"); for(int i=4;i&gt;=0;i--) &#123; printf("%d ",NPtr[i]); &#125; printf("\n"); printf("METHOD THREE\n"); for(int i=4;i&gt;=0;i--) &#123; printf("%d ",*(number+i)); &#125; printf("\n"); printf("METHOD FOUR\n"); for(int i=4;i&gt;=0;i--) &#123; printf("%d ",*(NPtr+i)); &#125; printf("\n"); system("pause");&#125; Write a program that reads 8 floats into an array and then prints out the second, fourth, sixth and eighth members of the array, and the sum of the first, third, fifth and seventh, using pointers to access the members of the array. 12345678910111213141516171819202122232425#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main() &#123; float f[8],*fPtr,total=0; fPtr=f; printf("Please type in 8 floats:"); for(int i=0;i&lt;8;i++) &#123; scanf("%f",&amp;f[i]); &#125; printf("The second, fourth, sixth and eighth members of the array are as followed:\n"); for(int i=1;i&lt;8;i+=2) &#123; printf("%f ",*(fPtr+i)); &#125; printf("\n"); for(int i=0;i&lt;8;i+=2) &#123; total=total+*(fPtr+i); &#125; printf("and the sum of the first, third, fifth and seventh is: %f \n",total); system("pause");&#125; Write a program that use a SINGLE FUNCTION （用一个函数）to find and return simultaneously both the lowest and highest values in an array of type int. Suppose the size of the array is 6. 123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;void SingleFunction(int *,int *);int main() &#123; int num[6],i; printf("Please type in 6 numbers: \n"); for(i=0;i&lt;6;i++) &#123; scanf("%d",&amp;num[i]); &#125; SingleFunction(num,num); system("pause");&#125;void SingleFunction(int *max,int *min)&#123; int maxnum,minnum; maxnum=*max; minnum=*min; for(int i=0;i&lt;6;i++) &#123; maxnum=maxnum &gt;= *(max+i) ? maxnum : *(max+i); minnum=minnum &lt;= *(min+i) ? minnum : *(min+i); &#125; printf("The max is %d, and the min is %d\n",maxnum,minnum);&#125; EX11 Files Write a program that enters the name and the annual salary of 5 employees from the keyboard, calculates the monthly salary of each employee assuming that tax is deducted at a flat rate of 20%. The program prints the name, the annual salary and the monthly payment (net) of each employee in a file. The program adds an employee’s number to each employee before printing the names and values:No. Employee’s Name Annual salary Monthly payment after tax12345678910111213141516171819202122232425262728#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; float annualsalary[5],monthlysalary[5]; char employee[5][20]; FILE *fptr; if((fptr=fopen("salary.txt","w"))==NULL) printf("Error in opening the file \n"); else &#123; for(int i=0;i&lt;5;i++) &#123; printf("Please type in employee's name and annual salary:\n"); scanf("%s%f",&amp;employee[i],&amp;annualsalary[i]);&#125; &#125; fprintf(fptr,"No. Employee's Name Annual salary Monthly payment after tax\n"); for(int i=0;i&lt;5;i++) &#123; monthlysalary[i]=annualsalary[i]/12*0.8; fprintf(fptr," %-4d %-10s %13.3f%25.3f\n",i+1,employee[i],annualsalary[i],monthlysalary[i]); &#125; fclose(fptr); printf("OK. The program has printed the name, the annual salary and the monthly payment of each employee in a file named salary.txt \n"); system("pause");&#125; 2．Write a program that builds a file with information for 20 towns. Each line in the file contains name of a town followed by the distance of the town from London in miles (an integer).123456789101112131415161718192021222324252627#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int distance[20]; char town[20][20]; FILE *fp; if((fp=fopen("town.txt","w"))==NULL) printf("Error in opening the file \n"); else &#123; for(int i=0;i&lt;20;i++) &#123; printf("Please type in No.%2d town's name and its distance from London:\n",i+1); scanf("%s %d",&amp;town[i],&amp;distance[i]); &#125; fprintf(fp,"No. Town's Name Distance from London \n"); for(int i=0;i&lt;20;i++) &#123; fprintf(fp,"%2d %11s %20d \n",i+1,town[i],distance[i]); &#125; &#125; fclose(fp); printf("OK. The program has built a file named town.txt with information for 20 towns. \n"); system("pause");&#125; 3．Write a program reads the file created by the above program (in Question 2) and prints the names of the towns that are less than 100 miles from London to ANOTHER file.1234567891011121314151617181920212223242526272829#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;int main()&#123; int distance[20],a; char town[20][20]; FILE *input,*output; output=fopen("townanother.txt","w"); if((input=fopen("town.txt","r"))==NULL) printf("Error in opening the file \n"); else &#123; fseek(input, 41, SEEK_SET); fprintf(output, "No. Town's Name Distance from London\n"); for(int i = 0; i &lt; 20; i++) &#123; fscanf(input, "%2d %11s %20d \n", &amp;a, &amp;town[i], &amp;distance[i]); if(distance[i] &lt; 100) &#123; fprintf(output, "%2d %11s %20d \n", i + 1, town[i], distance[i]); &#125; &#125; printf("OK. It has printed the names of the towns that are less than 100 miles from London to another file.\n"); &#125; fclose(input); fclose(output); system("pause");&#125; 好啦，以上是2016年C语言课程的所有练习题，大作业的代码咱们下次再见~]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>大一</tag>
        <tag>C语言</tag>
        <tag>Coursework</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
